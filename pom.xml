<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<artifactId>test</artifactId>

	<parent>
		<artifactId>webapp-runner-parent</artifactId>
		<groupId>com.heroku</groupId>
		<version>8.5.61.0</version>
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.source>1.7</maven.compiler.source>
		<maven.compiler.target>1.7</maven.compiler.target>
		<tomcat.version>8.5.23</tomcat.version>
	</properties>

	<build>
		<finalName>webapp-runner</finalName>
		<pluginManagement><!-- lock down plugins versions to avoid using Maven 
				defaults (may be moved to parent pom) -->
			<plugins>
				<plugin>
					<artifactId>maven-clean-plugin</artifactId>
					<version>3.1.0</version>
				</plugin>
				<!-- see http://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_war_packaging -->
				<plugin>
					<artifactId>maven-resources-plugin</artifactId>
					<version>3.0.2</version>
				</plugin>
				<plugin>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.8.0</version>
				</plugin>
				<plugin>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>2.22.1</version>
				</plugin>
				<plugin>
					<artifactId>maven-war-plugin</artifactId>
					<version>3.2.2</version>
				</plugin>
				<plugin>
					<artifactId>maven-install-plugin</artifactId>
					<version>2.5.2</version>
				</plugin>
				<plugin>
					<artifactId>maven-deploy-plugin</artifactId>
					<version>2.8.2</version>
				</plugin>

				<plugin>
					<artifactId>maven-assembly-plugin</artifactId>
					<version>${assembly.plugin.version}</version>
					<configuration>
						<descriptorRefs>
							<descriptorRef>jar-with-dependencies</descriptorRef>
						</descriptorRefs>
						<finalName>webapp-runner</finalName>
						<appendAssemblyId>false</appendAssemblyId>
						<archive>
							<manifest>
								<mainClass>webapp.runner.launch.Main</mainClass>
							</manifest>
						</archive>
					</configuration>
					<executions>
						<execution>
							<id>build-jar-with-dependencies</id>
							<phase>package</phase>
							<goals>
								<goal>single</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<artifactId>maven-source-plugin</artifactId>
					<version>${source.plugin.version}</version>
					<executions>
						<execution>
							<id>attach-source</id>
							<phase>deploy</phase>
							<goals>
								<goal>jar-no-fork</goal>
							</goals>
							<configuration>
								<forceCreation>true</forceCreation>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<artifactId>maven-javadoc-plugin</artifactId>
					<version>${javadoc.plugin.version}</version>
					<executions>
						<execution>
							<id>attach-javadoc</id>
							<phase>deploy</phase>
							<goals>
								<goal>jar</goal>
							</goals>
							<configuration>
								<source>1.8</source>
								<additionalparam>-Xdoclint:none</additionalparam>
								<sourcepath>
									${project.parent.basedir}/main/src/main/java:${project.parent.basedir}/memcached/src/main/java:${project.parent.basedir}/redis/src/main/java
								</sourcepath>
							</configuration>
						</execution>
					</executions>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
	<profiles>
		<profile>
			<id>fatjar</id>
			<activation>
				<activeByDefault>false</activeByDefault>
				<file>
					<!-- This will ensure the profile is always active, but Maven/Gradle 
						won't resolve and install the module dependencies when adding webapp-runner 
						as a dependency to another project. -->
					<missing>bogus-file-87fwqy8efadhda</missing>
				</file>
			</activation>
			<dependencies>
				<dependency>
					<groupId>com.heroku</groupId>
					<artifactId>webapp-runner-main</artifactId>
					<version>${project.version}</version>
					<scope>compile</scope>
				</dependency>
				<dependency>
					<groupId>com.heroku</groupId>
					<artifactId>webapp-runner-memcached</artifactId>
					<version>${project.version}</version>
					<scope>compile</scope>
				</dependency>
				<dependency>
					<groupId>com.heroku</groupId>
					<artifactId>webapp-runner-redis</artifactId>
					<version>${project.version}</version>
					<scope>compile</scope>
				</dependency>

				<!-- https://mvnrepository.com/artifact/javax.servlet/javax.servlet-api -->
				<dependency>
					<groupId>javax.servlet</groupId>
					<artifactId>javax.servlet-api</artifactId>
					<version>3.1.0</version>
					<scope>provided</scope>
				</dependency>

				<dependency>
					<groupId>com.sun.jersey.contribs</groupId>
					<artifactId>jersey-multipart</artifactId>
					<version>1.19.1</version>
				</dependency>
				<!-- Thanks for using https://jar-download.com -->


				<!-- https://mvnrepository.com/artifact/asm/asm -->
				<dependency>
					<groupId>asm</groupId>
					<artifactId>asm</artifactId>
					<version>3.3.1</version>
				</dependency>

				<!-- https://mvnrepository.com/artifact/com.sun.jersey/jersey-bundle -->
				<dependency>
					<groupId>com.sun.jersey</groupId>
					<artifactId>jersey-bundle</artifactId>
					<version>1.19.2</version>
				</dependency>

				<!-- https://mvnrepository.com/artifact/org.json/json -->
				<dependency>
					<groupId>org.json</groupId>
					<artifactId>json</artifactId>
					<version>20160810</version>
				</dependency>

				<!-- https://mvnrepository.com/artifact/com.sun.jersey/jersey-server -->
				<dependency>
					<groupId>com.sun.jersey</groupId>
					<artifactId>jersey-server</artifactId>
					<version>1.19.2</version>
				</dependency>

				<!-- https://mvnrepository.com/artifact/com.sun.jersey/jersey-core -->
				<dependency>
					<groupId>com.sun.jersey</groupId>
					<artifactId>jersey-core</artifactId>
					<version>1.19.2</version>
				</dependency>

				<!-- https://mvnrepository.com/artifact/mysql/mysql-connector-java -->
				<dependency>
					<groupId>mysql</groupId>
					<artifactId>mysql-connector-java</artifactId>
					<version>8.0.16</version>
				</dependency>
				<!-- https://mvnrepository.com/artifact/javax.xml.bind/jaxb-api -->
				<dependency>
					<groupId>javax.xml.bind</groupId>
					<artifactId>jaxb-api</artifactId>
					<version>2.3.1</version>
				</dependency>
				<dependency>
					<groupId>junit</groupId>
					<artifactId>junit</artifactId>
					<version>4.11</version>
					<scope>test</scope>
				</dependency>

				<dependency>
					<groupId>com.thetransactioncompany</groupId>
					<artifactId>cors-filter</artifactId>
					<version>2.9.1</version>
				</dependency>

				<!-- Tomcat dependencies -->
				<dependency>
					<groupId>org.apache.tomcat.embed</groupId>
					<artifactId>tomcat-embed-core</artifactId>
					<version>${tomcat.version}</version>
				</dependency>
				<dependency>
					<groupId>org.apache.tomcat.embed</groupId>
					<artifactId>tomcat-embed-jasper</artifactId>
					<version>${tomcat.version}</version>
				</dependency>
				<dependency>
					<groupId>org.apache.tomcat</groupId>
					<artifactId>tomcat-jasper</artifactId>
					<version>${tomcat.version}</version>
				</dependency>
				<dependency>
					<groupId>org.apache.tomcat</groupId>
					<artifactId>tomcat-jasper-el</artifactId>
					<version>${tomcat.version}</version>
				</dependency>
				<dependency>
					<groupId>org.apache.tomcat</groupId>
					<artifactId>tomcat-jsp-api</artifactId>
					<version>${tomcat.version}</version>
				</dependency>

			</dependencies>
		</profile>
		<profile>
			<id>integration-test</id>
			<properties>
				<invoker.skip>false</invoker.skip>
			</properties>
			<build>
				<defaultGoal>install</defaultGoal>
				<plugins>
					<plugin>
						<artifactId>maven-invoker-plugin</artifactId>
						<version>${invoker.plugin.version}</version>
						<configuration>
							<projectsDirectory>src/it</projectsDirectory>
							<cloneProjectsTo>${project.build.directory}/it</cloneProjectsTo>
							<preBuildHookScript>setup.groovy</preBuildHookScript>
							<postBuildHookScript>verify.groovy</postBuildHookScript>
							<streamLogs>true</streamLogs>
						</configuration>
						<executions>
							<execution>
								<id>integration-test</id>
								<goals>
									<goal>install</goal>
									<goal>run</goal>
								</goals>
								<configuration>
									<pomIncludes>
										<pomInclude>*/pom.xml</pomInclude>
									</pomIncludes>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
